---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |
      kubectl apply -n $NAMESPACE -f - <<EOF
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: test
        labels:
          opa.stackable.tech/bundle: "true"
      data:
        test.rego: |
          package test

          userInfoByUsername(username) := http.send({"method": "POST", "url": "http://127.0.0.1:9476/user", "body": {"username": username}, "headers": {"Content-Type": "application/json"}, "raise_error": true}).body
          userInfoById(id) := http.send({"method": "POST", "url": "http://127.0.0.1:9476/user", "body": {"id": id}, "headers": {"Content-Type": "application/json"}, "raise_error": true}).body

          currentUserInfoByUsername := userInfoByUsername(input.username)
          currentUserInfoById := userInfoById(input.id)
      ---
      # todo: https (take from demo)
      apiVersion: opa.stackable.tech/v1alpha1
      kind: OpaCluster
      metadata:
        name: test-opa
      spec:
        image:
          productVersion: "{{ test_scenario['values']['opa-latest'] }}"
        clusterConfig:
          userInfo:
            backend:
              keycloak:
                hostname: keycloak.$NAMESPACE.svc.cluster.local
                port: 8443
                # rootPath:
                tls:
                  verification:
                    server:
                      caCert:
                        secretClass: tls
                clientCredentialsSecret: opa-keycloak-userinfo-fetcher
                adminRealm: master
                userRealm: master
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
          vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
        servers:
          config:
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default: {}
      ---
      # todo: client authentication
      apiVersion: v1
      kind: Secret
      metadata:
        name: opa-keycloak-userinfo-fetcher
      stringData:
        clientId: userinfo-fetcher
        clientSecret: userinfofetcherclientsecret
      EOF
